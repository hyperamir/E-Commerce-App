{"ast":null,"code":"var _jsxFileName = \"/Users/amir/PROJECTS/MERN/e-commerce/client/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        product: action.payload,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction ProductScreen() {\n  _s();\n\n  const {\n    slug\n  } = useParams();\n  const [{\n    loading,\n    error,\n    product\n  }, dispatch] = useReducer(reducer, {\n    product: [],\n    loading: true,\n    error: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n\n      try {\n        const result = await axios.get(`/api/products/slug/${slug}`);\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: result.data\n        });\n      } catch (error) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: error.message\n        });\n      }\n    };\n\n    fetchData();\n  }, [slug]);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"LOADING...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: product.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductScreen, \"2eO3KvTtJa70KohIzSfd54NEwH4=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/Users/amir/PROJECTS/MERN/e-commerce/client/src/screens/ProductScreen.js"],"names":["React","useReducer","useParams","axios","reducer","state","action","type","loading","product","payload","error","ProductScreen","slug","dispatch","useEffect","fetchData","result","get","data","message","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYI,QAAAA,OAAO,EAAEH,MAAM,CAACI,OAA5B;AAAqCF,QAAAA,OAAO,EAAE;AAA9C,OAAP;;AACF,SAAK,YAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAA1C,OAAP;;AAEF;AACE,aAAOL,KAAP;AATJ;AAWD,CAZD;;AAcA,SAASO,aAAT,GAAyB;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAWX,SAAS,EAA1B;AACA,QAAM,CAAC;AAAEM,IAAAA,OAAF;AAAWG,IAAAA,KAAX;AAAkBF,IAAAA;AAAlB,GAAD,EAA8BK,QAA9B,IAA0Cb,UAAU,CAACG,OAAD,EAAU;AAClEK,IAAAA,OAAO,EAAE,EADyD;AAElED,IAAAA,OAAO,EAAE,IAFyD;AAGlEG,IAAAA,KAAK,EAAE;AAH2D,GAAV,CAA1D;AAMAI,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,SAAS,GAAG,YAAY;AAC5BF,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;;AACA,UAAI;AACF,cAAMU,MAAM,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,sBAAqBL,IAAK,EAArC,CAArB;AACAC,QAAAA,QAAQ,CAAC;AAAEP,UAAAA,IAAI,EAAE,eAAR;AAAyBG,UAAAA,OAAO,EAAEO,MAAM,CAACE;AAAzC,SAAD,CAAR;AACD,OAHD,CAGE,OAAOR,KAAP,EAAc;AACdG,QAAAA,QAAQ,CAAC;AAAEP,UAAAA,IAAI,EAAE,YAAR;AAAsBG,UAAAA,OAAO,EAAEC,KAAK,CAACS;AAArC,SAAD,CAAR;AACD;AACF,KARD;;AASAJ,IAAAA,SAAS;AACV,GAXQ,EAWN,CAACH,IAAD,CAXM,CAAT;AAaA,SAAOL,OAAO,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY,GAEVG,KAAK,gBACP;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UADO,gBAGP;AAAA,cACGF,OAAO,CAACY;AADX;AAAA;AAAA;AAAA;AAAA,UALF;AASD;;GA9BQT,a;UACUV,S;;;KADVU,a;AAgCT,eAAeA,aAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, product: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n}\n\nfunction ProductScreen() {\n  const { slug } = useParams();\n  const [{ loading, error, product }, dispatch] = useReducer(reducer, {\n    product: [],\n    loading: true,\n    error: ''\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get(`/api/products/slug/${slug}`);\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (error) {\n        dispatch({ type: 'FETCH_FAIL', payload: error.message })\n      }\n    }\n    fetchData();\n  }, [slug])\n\n  return loading ? (\n    <div>LOADING...</div>\n  ) : error ? (\n    <div>{error}</div>\n  ) : (\n    <div>\n      {product.name}\n    </div>\n  )\n}\n\nexport default ProductScreen"]},"metadata":{},"sourceType":"module"}