{"ast":null,"code":"var _jsxFileName = \"/Users/amir/PROJECTS/MERN/e-commerce/client/src/screens/ShippingAddressScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShippingAddressScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo,\n    cart: {\n      shippingAddress\n    }\n  } = state;\n  const [fullName, setFullName] = useState(shippingAddress.fullName || '');\n  const [address, setAddress] = useState(shippingAddress.address || '');\n  const [city, setCity] = useState(shippingAddress.city || '');\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode || '');\n  const [country, setCountry] = useState(shippingAddress.country || '');\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/signin?redirect=/shipping');\n    }\n  }, [userInfo, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS',\n      payload: {\n        fullName,\n        address,\n        city,\n        postalCode,\n        country\n      }\n    });\n    localStorage.setItem('shippingAddress', JSON.stringify({\n      fullName,\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    navigate('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container small-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: \"Shipping Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"fullName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: fullName,\n            onChange: e => setFullName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: address,\n            onChange: e => setAddress(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: city,\n            onChange: e => setCity(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"postalCode\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: postalCode,\n            onChange: e => setPostalCode(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: country,\n            onChange: e => setCountry(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShippingAddressScreen, \"4fPdjZIDYbKMPUKdgpZP8dNmUz0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ShippingAddressScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingAddressScreen\");","map":{"version":3,"sources":["/Users/amir/PROJECTS/MERN/e-commerce/client/src/screens/ShippingAddressScreen.js"],"names":["React","useContext","useEffect","useState","Form","Button","useNavigate","Store","CheckoutSteps","ShippingAddressScreen","navigate","state","dispatch","ctxDispatch","userInfo","cart","shippingAddress","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","type","payload","localStorage","setItem","JSON","stringify","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nexport default function ShippingAddressScreen() {\n  const navigate = useNavigate();\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    userInfo,\n    cart: { shippingAddress },\n  } = state;\n  const [fullName, setFullName] = useState(shippingAddress.fullName || '');\n  const [address, setAddress] = useState(shippingAddress.address || '');\n  const [city, setCity] = useState(shippingAddress.city || '');\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode || '');\n  const [country, setCountry] = useState(shippingAddress.country || '');\n\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/signin?redirect=/shipping');\n    }\n  }, [userInfo, navigate]);\n  \n  const submitHandler = (e) => {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS',\n      payload: {\n        fullName,\n        address,\n        city,\n        postalCode,\n        country,\n      },\n    });\n    localStorage.setItem(\n      'shippingAddress',\n      JSON.stringify({\n        fullName,\n        address,\n        city,\n        postalCode,\n        country,\n      })\n    );\n    navigate('/payment');\n  };\n  return (\n    <div>\n      <CheckoutSteps step1 step2></CheckoutSteps>\n      <div className=\"container small-container\">\n        <h1 className=\"my-3\">Shipping Address</h1>\n        <Form onSubmit={submitHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"fullName\">\n            <Form.Label>Full Name</Form.Label>\n            <Form.Control\n              value={fullName}\n              onChange={(e) => setFullName(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"address\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"city\">\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"postalCode\">\n            <Form.Label>Postal Code</Form.Label>\n            <Form.Control\n              value={postalCode}\n              onChange={(e) => setPostalCode(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"country\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              value={country}\n              onChange={(e) => setCountry(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <div className=\"mb-3\">\n            <Button variant=\"primary\" type=\"submit\">\n              Continue\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}