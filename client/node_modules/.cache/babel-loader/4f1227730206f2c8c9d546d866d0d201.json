{"ast":null,"code":"var _jsxFileName = \"/Users/amir/PROJECTS/MERN/e-commerce/client/src/screens/PaymentMethodScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { Store } from '../Store';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentMethodScreen = () => {\n  _s();\n\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    cart: {\n      shippingAddress,\n      paymentMethod\n    }\n  } = state;\n  const [paymentMethodName, setPaymentMethodName] = useState(paymentMethod || 'PayPal');\n  const navigate = useNavigate();\n  console.log('cart:', cart);\n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [shippingAddress, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_PAYMENT_METHOD',\n      payload: paymentMethodName\n    });\n    localStorage.setItem('paymentMethod', paymentMethodName);\n    navigate('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container small-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: \"Payment Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            id: \"PayPal\",\n            label: \"PayPal\",\n            value: \"PayPal\",\n            checked: paymentMethodName === 'PayPal',\n            onChange: e => setPaymentMethodName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            id: \"Stripe\",\n            label: \"Stripe\",\n            value: \"Stripe\",\n            checked: paymentMethodName === 'Stripe',\n            onChange: e => setPaymentMethodName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentMethodScreen, \"L4za3DxhNDDZifiy3NtDclveXWs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PaymentMethodScreen;\nexport default PaymentMethodScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentMethodScreen\");","map":{"version":3,"sources":["/Users/amir/PROJECTS/MERN/e-commerce/client/src/screens/PaymentMethodScreen.js"],"names":["React","useContext","useEffect","useState","useNavigate","CheckoutSteps","Store","Form","Button","PaymentMethodScreen","state","dispatch","ctxDispatch","cart","shippingAddress","paymentMethod","paymentMethodName","setPaymentMethodName","navigate","console","log","address","submitHandler","e","preventDefault","type","payload","localStorage","setItem","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { Store } from '../Store';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst PaymentMethodScreen = () => {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart: { shippingAddress, paymentMethod } } = state;\n  const [paymentMethodName, setPaymentMethodName] = useState(paymentMethod || 'PayPal');\n  const navigate = useNavigate();\n\n  console.log('cart:',cart)\n  \n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [shippingAddress, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\n    localStorage.setItem('paymentMethod', paymentMethodName);\n    navigate('/placeorder');\n  }\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\n      <div className=\"container small-container\">\n        <h1 className=\"my-3\">Payment Method</h1>\n        <Form onSubmit={submitHandler}>\n          <div className=\"mb-3\">\n            <Form.Check\n              type=\"radio\"\n              id=\"PayPal\"\n              label=\"PayPal\"\n              value=\"PayPal\"\n              checked={paymentMethodName === 'PayPal'}\n              onChange={(e) => setPaymentMethodName(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <Form.Check\n              type=\"radio\"\n              id=\"Stripe\"\n              label=\"Stripe\"\n              value=\"Stripe\"\n              checked={paymentMethodName === 'Stripe'}\n              onChange={(e) => setPaymentMethodName(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <Button type=\"submit\">Continue</Button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default PaymentMethodScreen;"]},"metadata":{},"sourceType":"module"}